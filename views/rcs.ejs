<!DOCTYPE html>
<html>

<head>
	<meta charset="utf-8" />
	<title>Getting started with JSON Form</title>
	<link rel="stylesheet" type="text/css" href="deps/opt/bootstrap.css" />
</head>

<body>
	<h1>RCS Campaign Creator</h1>
	<div class="container-fluid">
      <div class="row">
          <div class="col-xs-6 col-md-4"><h2>Invite a Tester</h2><form class="tester well"></form></div>
          <div class="col-xs-12 col-md-8"></div>
        </div>
      <div class="row">
        <div class="col-xs-10 col-md-6"><h2>Send an RCS Campaign</h2><form class="set well"></form></div>
        <div class="col-xs-8 col-md-6"></div>
      </div>
    </div>
	<div id="res" class="alert"></div>
	<script type="text/javascript" src="deps/jquery.min.js"></script>
  <script type="text/javascript" src="deps/underscore.js"></script>
  <script type="text/javascript" src="deps/opt/jsv.js"></script>
  <script type="text/javascript" src="deps/opt/jquery.ui.core.js"></script>
  <script type="text/javascript" src="deps/opt/jquery.ui.widget.js"></script>
  <script type="text/javascript" src="deps/opt/jquery.ui.mouse.js"></script>
  <script type="text/javascript" src="deps/opt/jquery.ui.sortable.js"></script>
  <script type="text/javascript" src="deps/opt/bootstrap-dropdown.js"></script>
  <script type="text/javascript" src="lib/jsonform.js"></script>
  <script type="text/javascript">
  jQuery.browser = {};
  jQuery.curCSS = function(element, prop, val) {
    return jQuery(element).css(prop, val);
  };
  (function () {
      jQuery.browser.msie = false;
      jQuery.browser.version = 0;
      if (navigator.userAgent.match(/MSIE ([0-9]+)\./)) {
          jQuery.browser.msie = true;
          jQuery.browser.version = RegExp.$1;
      }
  })();

  $('form.tester').jsonForm({
  "schema": {
    "msisdn": {
      "type": "string",
      "title": "Mobile Number"
    }
  },
  "form": [
    "msisdn",
    {
      "type": "actions",
      "items": [
        {
          "type": "button",
          "title": "Invite",
          "onClick": function (evt) {
            var values = $('form.tester').jsonFormValue();
            $.ajax({
              type: "POST",
              url: '/campaign/rcs/invite',
              data: values
            }).done(function (result) {
              console.log("result",result);
              alert(result[0].statusText);
            }).fail(function (error) {
              console.log("error",error);
              alert(error.responseText);
            });
          }
        }
      ]
    }
  ]
});

		$('form.set').jsonForm({
  "schema": {
    "msisdn": {
      "type": "string",
      "title": "Mobile Number"
    },
    "messages": {
      "type": "array",
      "maxItems": 10,
      "items": {
        "type": "object",
        "title": "Message Set",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "question": {
            "type": "string",
            "title": "Question"
          },
          "sequence": {
            "type": "number"
          },
          "suggestions": {
            "type": "array",
            "minItems": 1,
            "maxItems": 5,
            "items": {
              "type": "object",
              "title": "Suggestion",
              "properties": {
                "Type": {
                  "type": "string",
                  "title": "Type",
                  "enum": [
                    "Text",
                    "Action",
                    "Image",
                    "Product",
                    "User"
                  ]
                },
                "Trigger": {
                  "type": "string",
                  "title": "Trigger",
                  "enum": [
                    "End"
                  ]
                },
                "Value": {
                  "type": "string",
                  "title": "Value"
                },
                "Action": {
                  "type": "string",
                  "title": "Action",
                  "enum": [
                    "View Location",
                    "Create Calendar",
                    "Open URL",
                    "Dial Number"
                  ]
                },
                "Phone": {
                  "type": "string",
                  "title": "Phone"
                },
                "Latitude": {
                  "type": "string",
                  "title": "Latitude"
                },
                "Longitude": {
                  "type": "string",
                  "title": "Longitude"
                },
                "Query": {
                  "type": "string",
                  "title": "Query"
                },
                "Start": {
                  "type": "string",
                  "title": "Start Time"
                },
                "End": {
                  "type": "string",
                  "title": "End Time"
                },
                "Description": {
                  "type": "string",
                  "title": "Description"
                },
                "Url": {
                  "type": "string",
                  "title": "URL"
                },
                "Title": {
                  "type": "string",
                  "title": "Title"
                },
                "Price": {
                  "type": "string",
                  "title": "Price"
                },
                "FileUrl": {
                  "type": "string",
                  "title": "File Url"
                },
                "Sequence": {
                  "type": "number",
                },
                "ThumbnailUrl": {
                  "type": "string",
                  "title": "Thumbnail Url"
                },
                "UserInfo": {
                  "type": "string",
                  "title": "User Info",
                  "enum": [
                    "Name",
                    "Address",
                    "Mobile Phone"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "form": [
    {
      "type": "tabarray",
      "items": {
        "type": "section",
        "legend": "{{idx}}. {{value}}",
        "items": [
          { 
            "key": "messages[].name",
            "fieldHtmlClass": "setname",
            "valueInLegend": true,
            "onChange": function (evt) {
              $('form.set').find("select.trigger").each(function(){
                  $(this).html("");
              });
              $('form.set').find( "input.setname" ).each(function( index ) {
                var setname = this;
                $('form.set').find("select.trigger").each(function(){
                  let option = new Option($(setname).val(), $(setname).val());
                  $(this).append($(option));
                });
              });
              $('form.set').find("select.trigger").each(function(){
                let option = new Option("End", "End");
                $(this).append($(option));
              });
              
            }
          },
          { 
            "key": "messages[].question"
          },
          {
            "key" : "messages[].sequence",
            "value": "{{idx}}",
            "type": "hidden"
          },
          {
            "type": "array",
            "items": [
              {
                "type": "selectfieldset",
                "key": "messages[].suggestions[].Type",
                "title": "Type of Suggestion",
                "titleMap": {
                  "Text": "Text Suggestion",
                  "Action": "Action Suggestion",
                  "Image": "Image Suggestion",
                  "Product": "Product Suggestion",
                  "User": "User Profile Suggestion"
                },
                "items": [
                  {
                    "type": "fieldset",
                    "items": [
                      {
                        "key" : "messages[].suggestions[].Trigger",
                        "fieldHtmlClass": "trigger"
                      },
                      "messages[].suggestions[].Value",
                      {
                        "key" : "messages[].suggestions[].Sequence",
                        "value": "{{idx}}",
                        "type": "hidden"
                      }
                    ]
                  },
                  {
                    "type": "fieldset",
                    "items": [
                      {
                        "key" : "messages[].suggestions[].Trigger",
                        "fieldHtmlClass": "trigger"
                      },
                      "messages[].suggestions[].Value",
                      {
                        "type": "selectfieldset",
                        "key": "messages[].suggestions[].Action",
                        "title": "Type of Action",
                        "titleMap": {
                          "View Location": "View Location",
                          "Create Calendar": "Create Calendar",
                          "Open URL": "Open URL",
                          "Dial Number": "Dial Number",
                        },
                        "items": [
                          {
                            "type": "fieldset",
                            "items": [
                              "messages[].suggestions[].Latitude",
                              "messages[].suggestions[].Longitude",
                              "messages[].suggestions[].Query"
                            ]
                          },
                          {
                            "type": "fieldset",
                            "items": [
                              "messages[].suggestions[].Start",
                              "messages[].suggestions[].End",
                              "messages[].suggestions[].Description"
                            ]
                          },
                          "messages[].suggestions[].Url",
                          "messages[].suggestions[].Phone",
                          {
                            "key" : "messages[].suggestions[].Sequence",
                            "value": "{{idx}}",
                            "type": "hidden"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "type": "fieldset",
                    "items": [
                      "messages[].suggestions[].Description",
                      "messages[].suggestions[].Title",
                      "messages[].suggestions[].FileUrl",
                      "messages[].suggestions[].ThumbnailUrl",
                      "messages[].suggestions[].Value",
                      {
                        "key" : "messages[].suggestions[].Sequence",
                        "value": "{{idx}}",
                        "type": "hidden"
                      }
                    ]
                  },
                  {
                    "type": "fieldset",
                    "items": [
                      "messages[].suggestions[].Description",
                      "messages[].suggestions[].Price",
                      "messages[].suggestions[].FileUrl",
                      "messages[].suggestions[].ThumbnailUrl",
                      "messages[].suggestions[].Value",
                      {
                        "key" : "messages[].suggestions[].Sequence",
                        "value": "{{idx}}",
                        "type": "hidden"
                      }
                    ]
                  },
                  {
                    "type": "fieldset",
                    "items": [
                      "messages[].suggestions[].UserInfo",
                      "messages[].suggestions[].Value",
                      {
                        "key" : "messages[].suggestions[].Sequence",
                        "value": "{{idx}}",
                        "type": "hidden"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "actions",
            "items": [
              {
                "type": "button",
                "title": "Test {{idx}}",
                "onClick": function (evt) {
                  var idx = Number($(evt.target).html().replace("Test ",""));
                  var values = $('form.set').jsonFormValue();
                  var suggestions = values.messages[idx-1].suggestions;

                  let contentMessage = {
                    text: values.messages[idx-1].question,
                    suggestions : []
                  }; 
                  suggestions.forEach(function(suggestion){
                      if(suggestion.Type == "Text"){
                        contentMessage.suggestions.push(
                          {
                            reply: {
                                text: suggestion.Value,
                                postbackData: suggestion.Value
                            }
                          }
                        );
                      }
                      if(suggestion.Type == "Image"){
                        delete contentMessage.text;
                        if(!contentMessage.richCard){
                          contentMessage.richCard = {
                            carouselCard :{
                              cardWidth: 'MEDIUM',
                              cardContents:[]
                            }
                          }
                        }
                        let imgObj = {
                          media: {
                            height: "MEDIUM",
                            contentInfo: {
                                fileUrl: suggestion.FileUrl ,
                                forceRefresh: false,
                            },
                          },
                          suggestions: [
                            {
                              reply: {
                                text: suggestion.Value,
                                postbackData: suggestion.Value
                              }
                            }
                          ],
                          title: suggestion.Title,
                          description: suggestion.Description
                        };
                        contentMessage.richCard.carouselCard.cardContents.push(imgObj);
                      }
                      if(suggestion.Type == "Product"){
                        if(!contentMessage.richCard){
                          contentMessage.richCard = {
                            carouselCard :{
                              cardWidth: 'MEDIUM',
                              cardContents:[]
                            }
                          }
                        }
                        let imgObj = {
                          media: {
                            height: "MEDIUM",
                            contentInfo: {
                                fileUrl: suggestion.FileUrl ,
                                forceRefresh: false,
                            },
                          },
                          suggestions: [
                            {
                              reply: {
                                text: suggestion.Value,
                                postbackData: suggestion.Value
                              }
                            }
                          ],
                          title: suggestion.Title,
                          description: suggestion.Description
                        };
                        contentMessage.richCard.carouselCard.cardContents.push(imgObj);
                      }
                      if(suggestion.type == "Action"){
                        let option = {
                          action: {
                              text: suggestion.Value,
                              postbackData: suggestion.Value
                          }
                        };
                        if(suggestion.action == "Dial"){
                          option.action["dialAction"] = {
                            phoneNumber: suggestion.Phone
                          }
                        }
                        if(suggestion.action == "View Location"){
                          option.action["viewLocationAction"] = {
                            latLong: {
                              latitude: suggestion.Latitude,
                              longitude: suggestion.Longitude
                            },
                            label: suggestion.Value
                          }
                        }
                        if(suggestion.action == "Create Calendar"){
                          option.action["createCalendarEventAction"] = {
                            startTime: suggestion.Start,
                            endTime: suggestion.End,
                            title: suggestion.Value,
                            description: suggestion.Description
                          }
                        }
                        if(suggestion.Action == "Open URL"){
                          option.action["openUrlAction"] = {
                            url: suggestion.Url
                          }
                        }
                        contentMessage.suggestions.push(option);
                      }
                  });

                  if(contentMessage.text){
                    var rcsformat = {
                          "contentMessage": contentMessage
                        };

                    var content = {resource : JSON.stringify(rcsformat), msisdn : values.msisdn  };
                    $.ajax({
                        type: "POST",
                        url: '/campaign/rcs/message/send',
                        data: content
                      }).done(function (result) {
                        console.log("result",result);
                        alert(result[0]);
                      }).fail(function (error) {
                        console.log("error",error);
                        alert(error.responseText);
                    });
                  }
                  else{
                    var rcsformat1 = {
                      "contentMessage": {
                        text: values.messages[idx-1].question
                      }
                    };
                    
                    var content = {resource : JSON.stringify(rcsformat1), msisdn : values.msisdn  };
                    $.ajax({
                        type: "POST",
                        url: '/campaign/rcs/message/send',
                        data: content
                      }).done(function (result) {
                        var rcsformat = {
                          "contentMessage": contentMessage
                        };
                        var content = {resource : JSON.stringify(rcsformat), msisdn : values.msisdn  };
                        $.ajax({
                            type: "POST",
                            url: '/campaign/rcs/message/send',
                            data: content
                          }).done(function (result) {
                            console.log("result",result);
                            alert(result[0]);
                          }).fail(function (error) {
                            console.log("error",error);
                            alert(error.responseText);
                        });
                      }).fail(function (error) {
                        console.log("error",error);
                        alert(error.responseText);
                    });
                  }

                  

                  
    
                  
                }
              }
            ]
          }
        ]
      }
    },
    "msisdn",
    {
      "type": "actions",
      "items": [
        {
          "type": "button",
          "title": "Create",
          "onClick": function (evt) {
            var values = JSON.stringify($('form.set').jsonFormValue());
            $.ajax({
              type: "POST",
              url: '/campaign',
              data: {content : values}
            }).done(function (result) {
              console.log("result",result);
              alert(result[0]);
            }).fail(function (error) {
              console.log("error",error);
              alert(error.responseText);
            });
          }
        }
      ]
    }
  ]
});
	</script>
</body>

</html>